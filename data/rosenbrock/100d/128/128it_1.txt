Production main() running
number of optimizations = 1 max_iter = 128 dim = 100
Current stack size: 1024 bytes
Successfully set stack size to 65536 bytes

Select function to optimize:
 1. Rosenbrock
 2. Rastrigin
 3. Ackley
 7. Custom (user-defined objective via expression or kernel file)
Choice: 

	Rosenbrock Function

first 20 hostResults
 333777.000000  0.000000  0.000000  0.000000  0.000000  0.000000  0.000000  0.000000  69244686821830291752655208939024708233283211171164222697062684459249586973814908089768812621677451012583162442336904549500920629335793492488044316715472524004511236194927326506438761110155797649592263310804365981588476187026490930109709349600709490672067121001054907014316032.000000  0.000000  0.000000  0.000000  0.000000  0.000000  0.000000  0.000000  0.000000  0.000000  0.000000  0.000000 
Recommended block size: 256
Save optimization trajectories? (y/n): 

f0 = 1299132.317752
Optimization Kernel execution time = 607554.000000 ms

Global Minima: 102.484427
Global Minima Index: 0
Coordinates associated with Global Minima:
x[0] = 0.365389
x[1] = 0.143386
x[2] = 0.013698
x[3] = -0.038644
x[4] = 0.003703
x[5] = 0.010898
x[6] = 0.005542
x[7] = -0.001214
x[8] = 0.029374
x[9] = 0.017670
x[10] = -0.014222
x[11] = -0.029551
x[12] = 0.025727
x[13] = -0.010097
x[14] = 0.021692
x[15] = 0.037956
x[16] = 0.001746
x[17] = 0.026025
x[18] = 0.014327
x[19] = 0.016873
x[20] = 0.005114
x[21] = 0.039477
x[22] = -0.000412
x[23] = 0.015854
x[24] = 0.017793
x[25] = 0.010011
x[26] = 0.004023
x[27] = 0.022983
x[28] = 0.009947
x[29] = 0.011716
x[30] = 0.014134
x[31] = -0.013963
x[32] = -0.023394
x[33] = 0.015975
x[34] = -0.013667
x[35] = -0.032589
x[36] = 0.020146
x[37] = -0.009134
x[38] = -0.000491
x[39] = 0.008544
x[40] = 0.004339
x[41] = -0.011785
x[42] = 0.022388
x[43] = 0.009071
x[44] = 0.007556
x[45] = -0.003079
x[46] = 0.009040
x[47] = 0.048919
x[48] = 0.079378
x[49] = 0.010753
x[50] = -0.028884
x[51] = -0.001578
x[52] = 0.027785
x[53] = 0.036213
x[54] = -0.008032
x[55] = 0.002448
x[56] = -0.029435
x[57] = 0.013676
x[58] = 0.071581
x[59] = -0.015427
x[60] = 0.026350
x[61] = 0.004411
x[62] = 0.024952
x[63] = 0.022613
x[64] = 0.005173
x[65] = 0.024793
x[66] = 0.008581
x[67] = 0.017402
x[68] = 0.003109
x[69] = 0.036013
x[70] = 0.013625
x[71] = 0.004698
x[72] = 0.044975
x[73] = 0.036708
x[74] = 0.025278
x[75] = 0.021489
x[76] = 0.003239
x[77] = 0.023293
x[78] = 0.004380
x[79] = -0.007689
x[80] = -0.000482
x[81] = 0.012648
x[82] = 0.003513
x[83] = 0.014074
x[84] = 0.017393
x[85] = -0.014560
x[86] = -0.009669
x[87] = 0.001850
x[88] = -0.003181
x[89] = 0.019266
x[90] = 0.000288
x[91] = 0.020316
x[92] = -0.037853
x[93] = 0.030343
x[94] = 0.048334
x[95] = 0.021914
x[96] = -0.049747
x[97] = 0.058825
x[98] = 0.102617
x[99] = 0.020208

Success!! No Error!
first 20 function values in hostResults
 102.484427  0.000000  0.000000  0.000000  0.000000  0.000000  0.000000  0.000000  69244686821830291752655208939024708233283211171164222697062684459249586973814908089768812621677451012583162442336904549500920629335793492488044316715472524004511236194927326506438761110155797649592263310804365981588476187026490930109709349600709490672067121001054907014316032.000000  0.000000  0.365389  0.143386  0.013698  -0.038644  0.003703  0.010898  0.005542  -0.001214  0.029374  0.017670 

Do you want to optimize another function? (y/n): 