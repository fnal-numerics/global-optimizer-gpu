Production main() running
number of optimizations = 128 max_iter = 4 dim = 100
Current stack size: 1024 bytes
Successfully set stack size to 65536 bytes

Select function to optimize:
 1. Rosenbrock
 2. Rastrigin
 3. Ackley
 7. Custom (user-defined objective via expression or kernel file)
Choice: 

	Rosenbrock Function

first 20 hostResults
 333777.000000  333777.000000  333777.000000  333777.000000  333777.000000  333777.000000  333777.000000  333777.000000  333777.000000  333777.000000  333777.000000  333777.000000  333777.000000  333777.000000  333777.000000  333777.000000  333777.000000  333777.000000  333777.000000  333777.000000 
Recommended block size: 256
Save optimization trajectories? (y/n): 

f0 = 1299132.317752
Optimization Kernel execution time = 24475.101562 ms

Global Minima: 60242.623036
Global Minima Index: 55
Coordinates associated with Global Minima:
x[0] = 0.401658
x[1] = -0.899512
x[2] = 1.034864
x[3] = 0.699729
x[4] = -1.112129
x[5] = 2.053770
x[6] = 0.068667
x[7] = -1.028134
x[8] = 1.964247
x[9] = 1.198315
x[10] = 0.763037
x[11] = -1.096300
x[12] = 0.565225
x[13] = 0.189467
x[14] = -0.990389
x[15] = 1.128006
x[16] = -1.512007
x[17] = 0.688664
x[18] = -1.112925
x[19] = -1.737498
x[20] = 0.818698
x[21] = 1.091924
x[22] = -1.061775
x[23] = 0.809161
x[24] = -0.756069
x[25] = 0.547258
x[26] = -0.928399
x[27] = 0.856742
x[28] = -0.747256
x[29] = 0.451202
x[30] = -1.008974
x[31] = 1.047504
x[32] = 0.674487
x[33] = -1.057810
x[34] = 1.407715
x[35] = 0.376548
x[36] = -1.102772
x[37] = 0.997429
x[38] = 0.343767
x[39] = -0.584861
x[40] = 1.633516
x[41] = 1.510311
x[42] = 1.921863
x[43] = 2.478699
x[44] = 0.132740
x[45] = -1.270682
x[46] = 0.529387
x[47] = -1.177992
x[48] = -2.068655
x[49] = -2.225947
x[50] = 0.627623
x[51] = -1.181600
x[52] = 2.072449
x[53] = 1.371218
x[54] = 1.342567
x[55] = 2.147803
x[56] = 0.255830
x[57] = -1.207908
x[58] = 1.188899
x[59] = 0.802342
x[60] = -0.690861
x[61] = 0.863559
x[62] = 1.563510
x[63] = -1.798689
x[64] = -2.081718
x[65] = -1.892103
x[66] = -0.408573
x[67] = -0.987322
x[68] = 1.406541
x[69] = 1.020000
x[70] = 0.499322
x[71] = -2.004258
x[72] = -1.971788
x[73] = -2.022282
x[74] = 2.465159
x[75] = 1.156224
x[76] = 0.983954
x[77] = 1.862306
x[78] = -1.137001
x[79] = 0.675682
x[80] = -0.434356
x[81] = -2.150031
x[82] = -2.139684
x[83] = -1.091367
x[84] = -1.032695
x[85] = -1.077109
x[86] = 0.182898
x[87] = -0.412039
x[88] = -1.457082
x[89] = 1.425557
x[90] = 2.530357
x[91] = 1.395652
x[92] = 1.795184
x[93] = 0.451074
x[94] = 0.908162
x[95] = 0.682808
x[96] = -0.352828
x[97] = -1.221840
x[98] = 2.262872
x[99] = 5.001827

Success!! No Error!
first 20 function values in hostResults
 89497.028154  107356.599786  90678.508065  127512.557796  94207.484074  67128.596502  124167.788542  77867.929716  82355.141159  80680.264350  96614.943679  89978.743799  124567.970373  89724.872354  108728.725441  99229.077470  104021.684848  98636.964259  97918.815211  90429.239265 

Do you want to optimize another function? (y/n): 