Production main() running
number of optimizations = 512 max_iter = 1 dim = 100
Current stack size: 1024 bytes
Successfully set stack size to 65536 bytes

Select function to optimize:
 1. Rosenbrock
 2. Rastrigin
 3. Ackley
 7. Custom (user-defined objective via expression or kernel file)
Choice: 

	Rosenbrock Function

first 20 hostResults
 333777.000000  333777.000000  333777.000000  333777.000000  333777.000000  333777.000000  333777.000000  333777.000000  333777.000000  333777.000000  333777.000000  333777.000000  333777.000000  333777.000000  333777.000000  333777.000000  333777.000000  333777.000000  333777.000000  333777.000000 
Recommended block size: 256
Save optimization trajectories? (y/n): 

f0 = 1299132.317752
Optimization Kernel execution time = 18327.396484 ms

Global Minima: 37174.199028
Global Minima Index: 302
Coordinates associated with Global Minima:
x[0] = -0.336024
x[1] = 1.522966
x[2] = -0.796165
x[3] = 0.140285
x[4] = -1.153286
x[5] = -0.608570
x[6] = -0.005069
x[7] = 1.171949
x[8] = -1.458069
x[9] = 2.026796
x[10] = 1.458976
x[11] = 0.850024
x[12] = -0.620204
x[13] = -0.969004
x[14] = 0.695721
x[15] = 0.051584
x[16] = -1.702211
x[17] = 0.921600
x[18] = -0.565022
x[19] = -1.125246
x[20] = -0.831260
x[21] = 0.101497
x[22] = -1.312740
x[23] = 0.810735
x[24] = 1.239803
x[25] = -0.909419
x[26] = -0.926466
x[27] = 0.976221
x[28] = -1.065905
x[29] = 1.946395
x[30] = 1.355228
x[31] = 0.650803
x[32] = -0.915557
x[33] = -2.016217
x[34] = 0.645139
x[35] = -1.476998
x[36] = 1.597904
x[37] = 1.536543
x[38] = 1.625612
x[39] = 1.239327
x[40] = -1.364320
x[41] = 2.154808
x[42] = -0.104546
x[43] = -0.911446
x[44] = -1.464421
x[45] = 0.265815
x[46] = 1.422940
x[47] = -0.517001
x[48] = -1.674269
x[49] = 1.485930
x[50] = -1.816268
x[51] = 1.423881
x[52] = 1.966025
x[53] = 1.181375
x[54] = 0.754768
x[55] = -0.751086
x[56] = 1.369692
x[57] = -1.842648
x[58] = 2.104141
x[59] = 2.203943
x[60] = -0.509677
x[61] = 1.277848
x[62] = 1.501857
x[63] = 1.577622
x[64] = -1.303750
x[65] = -0.111184
x[66] = -0.019488
x[67] = -0.493104
x[68] = -1.206725
x[69] = -1.208420
x[70] = 1.873930
x[71] = 1.259102
x[72] = -0.129691
x[73] = -0.354889
x[74] = 1.130063
x[75] = -1.862256
x[76] = 1.580057
x[77] = 0.854405
x[78] = -1.546139
x[79] = 1.901003
x[80] = 0.964258
x[81] = 1.365029
x[82] = 0.568444
x[83] = -1.369421
x[84] = 1.421424
x[85] = 1.429342
x[86] = -1.174227
x[87] = -1.288363
x[88] = 1.576686
x[89] = 0.162139
x[90] = -0.578114
x[91] = -0.469754
x[92] = -0.277907
x[93] = -0.297124
x[94] = 1.699192
x[95] = 0.447012
x[96] = 0.326827
x[97] = -0.737752
x[98] = 0.639313
x[99] = -4.375524

Success!! No Error!
first 20 function values in hostResults
 154339.606034  177239.789266  172543.526249  200177.629488  179336.488382  150159.810351  187726.856995  157512.589846  158323.393414  151166.604263  168160.093027  166734.764868  185392.791732  166795.099402  171252.984005  186745.166027  187769.341658  191611.009244  178122.904587  168147.568299 

Do you want to optimize another function? (y/n): 