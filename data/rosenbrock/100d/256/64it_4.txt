Production main() running
number of optimizations = 4 max_iter = 64 dim = 100
Current stack size: 1024 bytes
Successfully set stack size to 65536 bytes

Select function to optimize:
 1. Rosenbrock
 2. Rastrigin
 3. Ackley
 7. Custom (user-defined objective via expression or kernel file)
Choice: 

	Rosenbrock Function

first 20 hostResults
 333777.000000  333777.000000  333777.000000  333777.000000  0.000000  0.000000  0.000000  0.000000  0.000000  0.000000  69594574231784392101611520250214262158502107195217617642033390062099746861524429742802729477180010911130185780915356297590433953665142934284340026701134013510734459526622999865429723773376036681634584939190255646952904146305416315909259979276354407424418841777537160700755968.000000  0.000000  0.000000  0.000000  0.000000  0.000000  0.000000  0.000000  0.000000  0.000000 
Recommended block size: 256
Save optimization trajectories? (y/n): 

f0 = 1299132.317752
Optimization Kernel execution time = 163664.734375 ms

Global Minima: 3210.272325
Global Minima Index: 2
Coordinates associated with Global Minima:
x[0] = 0.211391
x[1] = -0.676357
x[2] = 0.207321
x[3] = -0.919412
x[4] = 0.729940
x[5] = 0.641027
x[6] = -0.250456
x[7] = 0.319655
x[8] = -0.232036
x[9] = -0.799715
x[10] = 0.281581
x[11] = 0.379853
x[12] = 0.148236
x[13] = 0.429142
x[14] = 0.481716
x[15] = 0.512296
x[16] = -0.166496
x[17] = -0.904176
x[18] = 0.949359
x[19] = 0.707972
x[20] = 0.255425
x[21] = -0.320013
x[22] = -1.066679
x[23] = 1.308136
x[24] = 1.019192
x[25] = 0.824525
x[26] = 0.711837
x[27] = -0.456628
x[28] = -0.891703
x[29] = 1.420344
x[30] = 1.283846
x[31] = 0.635996
x[32] = 0.083274
x[33] = -1.056203
x[34] = 1.092464
x[35] = 1.078897
x[36] = 0.736788
x[37] = 0.149014
x[38] = -0.588056
x[39] = 0.440227
x[40] = -0.405462
x[41] = -0.344730
x[42] = 0.355086
x[43] = -0.975332
x[44] = 0.563579
x[45] = -0.632013
x[46] = 0.692265
x[47] = 0.221217
x[48] = -0.628767
x[49] = 0.355375
x[50] = -0.481332
x[51] = -0.685598
x[52] = 0.735352
x[53] = 0.303645
x[54] = 0.443217
x[55] = -0.812249
x[56] = 1.002021
x[57] = 0.636016
x[58] = -0.031373
x[59] = -0.613017
x[60] = 0.218153
x[61] = 0.416909
x[62] = 0.816730
x[63] = 0.218855
x[64] = 0.003646
x[65] = -1.064861
x[66] = 1.201779
x[67] = 1.266628
x[68] = 0.554728
x[69] = -1.121385
x[70] = 1.142357
x[71] = 1.273505
x[72] = 1.305887
x[73] = 1.053132
x[74] = 0.663593
x[75] = 0.150457
x[76] = -0.890208
x[77] = 1.086588
x[78] = 0.780536
x[79] = 1.214051
x[80] = 1.363635
x[81] = 1.107968
x[82] = 1.197416
x[83] = 1.016975
x[84] = 1.059461
x[85] = 0.922693
x[86] = 0.759187
x[87] = 0.274446
x[88] = 0.535673
x[89] = 0.064397
x[90] = -0.359422
x[91] = -0.243080
x[92] = -0.789844
x[93] = 1.006580
x[94] = 0.854802
x[95] = -0.271902
x[96] = 0.259252
x[97] = -0.046140
x[98] = -0.765674
x[99] = 1.013990

Success!! No Error!
first 20 function values in hostResults
 3883.914591  7321.432899  3210.272325  4023.200744  0.000000  0.000000  0.000000  0.000000  0.000000  0.000000  69594574231784392101611520250214262158502107195217617642033390062099746861524429742802729477180010911130185780915356297590433953665142934284340026701134013510734459526622999865429723773376036681634584939190255646952904146305416315909259979276354407424418841777537160700755968.000000  0.000000  0.211391  -0.676357  0.207321  -0.919412  0.729940  0.641027  -0.250456  0.319655 

Do you want to optimize another function? (y/n): 