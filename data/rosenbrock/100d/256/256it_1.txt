Production main() running
number of optimizations = 1 max_iter = 256 dim = 100
Current stack size: 1024 bytes
Successfully set stack size to 65536 bytes

Select function to optimize:
 1. Rosenbrock
 2. Rastrigin
 3. Ackley
 7. Custom (user-defined objective via expression or kernel file)
Choice: 

	Rosenbrock Function

first 20 hostResults
 333777.000000  0.000000  0.000000  0.000000  0.000000  0.000000  0.000000  0.000000  69244620785013915169893880288577664649638356718206520148356066053544201755915040781030818563707002931730762300556198370198467059319135998738502644985094416224536059445117594392163977484884566481701992255745056886508490364387532700233026358315193005046436800875428314917896192.000000  0.000000  0.000000  0.000000  0.000000  0.000000  0.000000  0.000000  0.000000  0.000000  0.000000  0.000000 
Recommended block size: 256
Save optimization trajectories? (y/n): 

f0 = 1299132.317752
Optimization Kernel execution time = 1318168.750000 ms

Global Minima: 83.989101
Global Minima Index: 0
Coordinates associated with Global Minima:
x[0] = 0.998632
x[1] = 1.001095
x[2] = 1.001697
x[3] = 0.999915
x[4] = 0.998987
x[5] = 1.000460
x[6] = 0.997237
x[7] = 0.992651
x[8] = 0.982905
x[9] = 0.965697
x[10] = 0.931953
x[11] = 0.867719
x[12] = 0.748163
x[13] = 0.555834
x[14] = 0.304621
x[15] = 0.098065
x[16] = 0.021524
x[17] = 0.009626
x[18] = 0.010372
x[19] = 0.013613
x[20] = 0.006119
x[21] = 0.008848
x[22] = 0.012147
x[23] = 0.008169
x[24] = 0.007028
x[25] = 0.004389
x[26] = 0.012011
x[27] = 0.012076
x[28] = 0.011279
x[29] = 0.017804
x[30] = 0.007459
x[31] = 0.009583
x[32] = 0.007789
x[33] = 0.016963
x[34] = 0.020232
x[35] = 0.008101
x[36] = 0.013156
x[37] = 0.012419
x[38] = 0.011294
x[39] = 0.014084
x[40] = 0.012072
x[41] = -0.001038
x[42] = 0.012205
x[43] = 0.008762
x[44] = 0.022025
x[45] = 0.012163
x[46] = 0.007617
x[47] = 0.008660
x[48] = -0.010055
x[49] = 0.009881
x[50] = 0.012468
x[51] = 0.004651
x[52] = 0.011710
x[53] = 0.020870
x[54] = 0.013753
x[55] = 0.009831
x[56] = 0.003141
x[57] = 0.010269
x[58] = 0.012238
x[59] = 0.002055
x[60] = 0.008674
x[61] = 0.006725
x[62] = 0.012073
x[63] = 0.018939
x[64] = 0.011580
x[65] = 0.000491
x[66] = 0.013096
x[67] = 0.006356
x[68] = 0.020012
x[69] = 0.005471
x[70] = 0.016865
x[71] = 0.001431
x[72] = 0.020016
x[73] = 0.008137
x[74] = 0.012316
x[75] = 0.008733
x[76] = 0.012203
x[77] = 0.013486
x[78] = 0.010991
x[79] = 0.003436
x[80] = 0.010287
x[81] = 0.014457
x[82] = 0.014080
x[83] = 0.008104
x[84] = 0.012374
x[85] = 0.000430
x[86] = 0.008908
x[87] = 0.000610
x[88] = 0.015110
x[89] = 0.020575
x[90] = 0.019515
x[91] = 0.011249
x[92] = 0.014370
x[93] = 0.014466
x[94] = 0.012772
x[95] = 0.014562
x[96] = 0.016481
x[97] = 0.014298
x[98] = 0.005703
x[99] = -0.001794

Success!! No Error!
first 20 function values in hostResults
 83.989101  0.000000  0.000000  0.000000  0.000000  0.000000  0.000000  0.000000  69244620785013915169893880288577664649638356718206520148356066053544201755915040781030818563707002931730762300556198370198467059319135998738502644985094416224536059445117594392163977484884566481701992255745056886508490364387532700233026358315193005046436800875428314917896192.000000  0.000000  0.998632  1.001095  1.001697  0.999915  0.998987  1.000460  0.997237  0.992651  0.982905  0.965697 

Do you want to optimize another function? (y/n): 