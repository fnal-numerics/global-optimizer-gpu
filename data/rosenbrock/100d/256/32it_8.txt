Production main() running
number of optimizations = 8 max_iter = 32 dim = 100
Current stack size: 1024 bytes
Successfully set stack size to 65536 bytes

Select function to optimize:
 1. Rosenbrock
 2. Rastrigin
 3. Ackley
 7. Custom (user-defined objective via expression or kernel file)
Choice: 

	Rosenbrock Function

first 20 hostResults
 333777.000000  333777.000000  333777.000000  333777.000000  333777.000000  333777.000000  333777.000000  333777.000000  0.000000  0.000000  0.000000  0.000000  0.000000  0.000000  69602259614117377910139267262176353830888041919274151451666321558031234613265209705790455041336700017029530473382628742368134433446702841094642495024508749933311402725823994858506547070750595089692000244642952566395525968738745546910493131563844479266855714774026757789974528.000000  0.000000  0.000000  0.000000  0.000000  0.000000 
Recommended block size: 256
Save optimization trajectories? (y/n): 

f0 = 1299132.317752
Optimization Kernel execution time = 82225.812500 ms

Global Minima: 17694.847798
Global Minima Index: 6
Coordinates associated with Global Minima:
x[0] = -0.857971
x[1] = -0.490321
x[2] = -0.028981
x[3] = -0.590485
x[4] = -0.864406
x[5] = 0.710463
x[6] = -0.835527
x[7] = 0.210230
x[8] = -0.931550
x[9] = 0.687361
x[10] = -1.412773
x[11] = 0.059790
x[12] = -0.858035
x[13] = -0.246893
x[14] = -0.577606
x[15] = -0.303952
x[16] = -1.267625
x[17] = 1.126328
x[18] = 1.107129
x[19] = 1.127918
x[20] = -0.790848
x[21] = 0.294645
x[22] = -0.398312
x[23] = -1.188699
x[24] = 1.296569
x[25] = 1.346705
x[26] = 1.477274
x[27] = 1.377200
x[28] = 1.446461
x[29] = 0.141076
x[30] = -1.208654
x[31] = 1.271816
x[32] = 2.043856
x[33] = 1.518148
x[34] = 1.062938
x[35] = -0.762847
x[36] = -1.010991
x[37] = 0.992208
x[38] = -1.099757
x[39] = 1.384429
x[40] = 1.628386
x[41] = 0.207571
x[42] = -0.695080
x[43] = 0.986693
x[44] = 0.960121
x[45] = -0.645569
x[46] = -0.568342
x[47] = -0.369622
x[48] = -1.309908
x[49] = 0.385834
x[50] = -1.554283
x[51] = 1.475228
x[52] = 1.393917
x[53] = -0.553977
x[54] = -0.655197
x[55] = 0.361029
x[56] = 0.494704
x[57] = -0.667967
x[58] = -1.326183
x[59] = 0.706853
x[60] = -1.901714
x[61] = 0.972902
x[62] = 1.309913
x[63] = 0.750941
x[64] = -1.040930
x[65] = 1.910207
x[66] = 0.531518
x[67] = -1.505872
x[68] = -0.285110
x[69] = -1.150330
x[70] = 0.814955
x[71] = -0.077456
x[72] = -1.219008
x[73] = 2.187109
x[74] = 1.111335
x[75] = -0.163807
x[76] = -0.972703
x[77] = 0.842298
x[78] = 1.153365
x[79] = -1.487128
x[80] = 1.058503
x[81] = 1.420406
x[82] = 1.666097
x[83] = 0.429385
x[84] = -0.043479
x[85] = -0.927260
x[86] = 0.254162
x[87] = -1.051147
x[88] = 0.054232
x[89] = -1.212221
x[90] = 1.127859
x[91] = 1.003033
x[92] = -1.236306
x[93] = 1.818073
x[94] = 1.245893
x[95] = 0.624498
x[96] = -1.010174
x[97] = 1.052464
x[98] = 1.102992
x[99] = 3.031821

Success!! No Error!
first 20 function values in hostResults
 65741.850031  85661.356171  25749.663537  53345.224244  26231.938121  21161.517841  17694.847798  28914.994777  0.000000  0.000000  0.000000  0.000000  0.000000  0.000000  69602259614117377910139267262176353830888041919274151451666321558031234613265209705790455041336700017029530473382628742368134433446702841094642495024508749933311402725823994858506547070750595089692000244642952566395525968738745546910493131563844479266855714774026757789974528.000000  0.000000  -0.857971  -0.490321  -0.028981  -0.590485 

Do you want to optimize another function? (y/n): 