Production main() running
number of optimizations = 64 max_iter = 16 dim = 100
Current stack size: 1024 bytes
Successfully set stack size to 65536 bytes

Select function to optimize:
 1. Rosenbrock
 2. Rastrigin
 3. Ackley
 7. Custom (user-defined objective via expression or kernel file)
Choice: 

	Rosenbrock Function

first 20 hostResults
 333777.000000  333777.000000  333777.000000  333777.000000  333777.000000  333777.000000  333777.000000  333777.000000  333777.000000  333777.000000  333777.000000  333777.000000  333777.000000  333777.000000  333777.000000  333777.000000  333777.000000  333777.000000  333777.000000  333777.000000 
Recommended block size: 256
Save optimization trajectories? (y/n): 

f0 = 1299132.317752
Optimization Kernel execution time = 43196.765625 ms

Global Minima: 57805.866794
Global Minima Index: 55
Coordinates associated with Global Minima:
x[0] = -0.233509
x[1] = 0.689690
x[2] = 0.127918
x[3] = 0.429785
x[4] = -1.358370
x[5] = 2.171669
x[6] = 0.643678
x[7] = -0.952924
x[8] = 1.776966
x[9] = 1.254400
x[10] = 0.584936
x[11] = -1.417072
x[12] = 0.857888
x[13] = 0.377753
x[14] = -1.025057
x[15] = 0.968046
x[16] = -1.324556
x[17] = 0.710664
x[18] = -1.170174
x[19] = -1.694765
x[20] = 1.257606
x[21] = 1.251360
x[22] = -1.243235
x[23] = 1.510856
x[24] = 1.254070
x[25] = 0.776010
x[26] = -1.204144
x[27] = 1.511027
x[28] = 1.114804
x[29] = 0.255432
x[30] = -0.582249
x[31] = -0.126900
x[32] = 0.572374
x[33] = -1.208586
x[34] = 1.370272
x[35] = 0.521219
x[36] = -0.868812
x[37] = 0.663488
x[38] = -0.113914
x[39] = -1.101079
x[40] = 1.800757
x[41] = 1.839008
x[42] = 1.902791
x[43] = 2.426348
x[44] = 0.643272
x[45] = -1.256733
x[46] = 0.392063
x[47] = -1.280345
x[48] = -2.007954
x[49] = -2.251604
x[50] = 0.625372
x[51] = -1.138479
x[52] = 2.064648
x[53] = 1.605790
x[54] = 1.509367
x[55] = 2.172719
x[56] = 0.688562
x[57] = -0.906636
x[58] = 0.923467
x[59] = 0.423539
x[60] = -1.120836
x[61] = 1.235183
x[62] = 1.561039
x[63] = -1.781880
x[64] = -2.100220
x[65] = -1.949406
x[66] = -0.054885
x[67] = -1.051087
x[68] = 1.353060
x[69] = 0.866671
x[70] = 0.414099
x[71] = -2.106103
x[72] = -1.997681
x[73] = -1.991613
x[74] = 2.500096
x[75] = 1.431384
x[76] = 1.496151
x[77] = 1.740456
x[78] = -0.668850
x[79] = 0.255368
x[80] = -0.557442
x[81] = -2.151924
x[82] = -2.134807
x[83] = -1.067480
x[84] = -1.027319
x[85] = -1.266622
x[86] = 0.672966
x[87] = -0.196889
x[88] = -1.415625
x[89] = 1.589327
x[90] = 2.528032
x[91] = 1.551133
x[92] = 1.883379
x[93] = 1.374959
x[94] = 1.241307
x[95] = 1.030026
x[96] = -0.041788
x[97] = -1.340032
x[98] = 2.143671
x[99] = 4.809584

Success!! No Error!
first 20 function values in hostResults
 82807.636723  97895.321623  83807.584842  119578.593089  88028.379940  62017.543841  118917.538282  72031.496359  74168.082474  65346.927216  90346.835920  85059.785191  108633.285999  81546.597303  104013.770203  94659.247740  97330.529096  93916.112115  90751.698892  83647.921711 

Do you want to optimize another function? (y/n): 